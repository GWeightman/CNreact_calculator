{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","sums","setSums","isError","message","setError","className","id","map","num","index","onClick","alterSums","length","pop","joinSum","join","newSum","evaluate","storedSums","shift","err","addNum","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uPA8DeA,MA1Df,WACE,IACA,EAAwBC,mBAAS,CAAC,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,CAAEG,SAAS,EAAOC,QAAS,KAA9D,mBAAcC,GAAd,WAsCA,OACE,qBAAKC,UAAU,MAAf,SAEE,sBAAKC,GAAG,YAAR,UACE,6BAAKN,IACL,qBAAKK,UAAU,UAAf,SA7CO,CAAC,QAAS,OAAQ,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,KA8C7EE,KAAI,SAACC,EAAKC,GAAN,OACJ,wBAAoBC,QAAS,kBA3C5B,SAACF,GACd,IAGE,GAFAJ,EAAS,CAAEF,SAAS,EAAOC,QAAS,KAEzB,SAAPK,EACFP,EAAQ,CAAC,SAEN,GAAW,QAAPO,EAAc,CACrB,IAAIG,EAAS,YAAOX,GAChBW,EAAUC,OAAS,GACrBD,EAAUE,MACVZ,EAAQU,IAGRV,EAAQ,CAAC,SAGR,GAAW,KAAPO,EAAW,CAClB,IAAIM,EAAUd,EAAKe,KAAK,IACpBC,EAASC,YAASH,GACtBb,EAAQe,OAEN,CACF,IAAIE,EAAU,sBAAOlB,GAAP,CAAaQ,IACN,IAAlBU,EAAW,IACZA,EAAWC,QAEblB,EAAQiB,IAEV,MAAOE,GACPhB,EAAS,CAAEF,SAAS,EAAMC,QAASiB,IACnCnB,EAAQ,CAAC,KAYoCoB,CAAOb,IAA1C,SAAiDA,GAApCC,cCxCda,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjDZ,M","file":"static/js/main.88bd6855.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { evaluate } from 'mathjs'\nimport './App.css';\n\nfunction App() {\n  const nums = [\"clear\", \"back\", \"%\", \"/\", 9, 8, 7, \"*\", 6, 5, 4, \"-\", 3, 2, 1, \"+\", \".\", 0, \"=\"]\n  const [sums, setSums] = useState([0])\n  const [error, setError] = useState({ isError: false, message: \"\" })\n\n  const addNum = (num) => {\n    try {\n      setError({ isError: false, message: \"\" })\n      \n      if (num == \"clear\"){\n        setSums([0])\n      }\n      else if (num == \"back\"){\n        let alterSums = [...sums]\n        if (alterSums.length > 1){\n          alterSums.pop()\n          setSums(alterSums)\n        }\n        else{\n          setSums([0])\n        }\n      }\n      else if (num == \"=\"){\n        let joinSum = sums.join(\"\")\n        let newSum = evaluate(joinSum)\n        setSums(newSum)\n      }\n      else{\n        let storedSums = [...sums, num]\n        if(storedSums[0] === 0){\n          storedSums.shift()\n        }\n        setSums(storedSums)\n      }\n    } catch (err) {\n      setError({ isError: true, message: err })\n      setSums([0])\n    }  \n  }\n\n\n  return(\n    <div className=\"all\">\n      {/* <h1>My Calculator App</h1> */}\n      <div id=\"container\" >\n        <h2>{sums}</h2>\n        <div className=\"buttons\">\n          {nums.map((num, index) => (\n                <button key={index} onClick={() => addNum(num)}>{num}</button>\n            ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n  \n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}